// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "01/27/2022 20:50:47"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          bdc2bin
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module bdc2bin_vlg_vec_tst();
// constants                                           
// general purpose registers
reg I0;
reg I1;
reg I2;
reg I3;
reg I4;
reg I5;
reg I6;
reg I7;
// wires                                               
wire Q0;
wire Q1;
wire Q2;
wire Q3;
wire Q4;
wire Q5;
wire Q6;
wire Q7;

// assign statements (if any)                          
bdc2bin i1 (
// port map - connection between master ports and signals/registers   
	.I0(I0),
	.I1(I1),
	.I2(I2),
	.I3(I3),
	.I4(I4),
	.I5(I5),
	.I6(I6),
	.I7(I7),
	.Q0(Q0),
	.Q1(Q1),
	.Q2(Q2),
	.Q3(Q3),
	.Q4(Q4),
	.Q5(Q5),
	.Q6(Q6),
	.Q7(Q7)
);
initial 
begin 
#1000000 $finish;
end 

// I7
initial
begin
	I7 = 1'b0;
	I7 = #937500 1'b1;
end 

// I6
initial
begin
	I6 = 1'b0;
	I6 = #500000 1'b1;
	I6 = #437500 1'b0;
end 

// I5
initial
begin
	I5 = 1'b0;
	I5 = #250000 1'b1;
	I5 = #250000 1'b0;
	I5 = #187500 1'b1;
	I5 = #250000 1'b0;
end 

// I4
initial
begin
	I4 = 1'b0;
	I4 = #125000 1'b1;
	I4 = #125000 1'b0;
	I4 = #125000 1'b1;
	I4 = #125000 1'b0;
	I4 = #62500 1'b1;
	I4 = #125000 1'b0;
	I4 = #125000 1'b1;
	I4 = #125000 1'b0;
end 

// I3
initial
begin
	I3 = 1'b0;
	I3 = #62500 1'b1;
	I3 = #62500 1'b0;
	I3 = #62500 1'b1;
	I3 = #62500 1'b0;
	I3 = #62500 1'b1;
	I3 = #62500 1'b0;
	I3 = #125000 1'b1;
	I3 = #62500 1'b0;
	I3 = #62500 1'b1;
	I3 = #62500 1'b0;
	I3 = #62500 1'b1;
	I3 = #62500 1'b0;
end 

// I2
initial
begin
	I2 = 1'b0;
	I2 = #250000 1'b1;
	I2 = #62500 1'b0;
	I2 = #62500 1'b1;
	I2 = #62500 1'b0;
	I2 = #375000 1'b1;
end 

// I1
initial
begin
	I1 = 1'b0;
	I1 = #125000 1'b1;
	I1 = #62500 1'b0;
	I1 = #187500 1'b1;
	I1 = #62500 1'b0;
	I1 = #250000 1'b1;
	I1 = #62500 1'b0;
	I1 = #125000 1'b1;
end 

// I0
initial
begin
	I0 = 1'b0;
	I0 = #62500 1'b1;
	I0 = #62500 1'b0;
	I0 = #62500 1'b1;
	I0 = #62500 1'b0;
	I0 = #62500 1'b1;
	I0 = #62500 1'b0;
	I0 = #187500 1'b1;
	I0 = #62500 1'b0;
	I0 = #62500 1'b1;
	I0 = #62500 1'b0;
	I0 = #62500 1'b1;
	I0 = #62500 1'b0;
	I0 = #62500 1'b1;
end 
endmodule

